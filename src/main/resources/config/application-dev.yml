# ===================================================================
# Spring Boot configuration for the "dev" profile.
#
# This configuration overrides the application.yml file.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================
logging:
  level:
    ROOT: debug
    tech.jhipster: debug
    org.hibernate.SQL: debug
    vn.softdreams.easypos: debug
  logback:
    rollingpolicy:
      max-file-size: 50MB
spring:
  devtools:
    restart:
      enabled: true
      additional-exclude: static/**
    livereload:
      enabled: false # we use Webpack dev server + BrowserSync for livereload
  jackson:
    serialization:
      indent-output: true
  datasource:
    type: com.microsoft.sqlserver.jdbc.SQLServerDataSource
    url: jdbc:sqlserver://10.100.110.78:1433;databaseName=easyposbackoffice;encrypt=true;trustServerCertificate=true;
    username: sa
    password: Sds@123
    hikari:
      poolName: Hikari
      auto-commit: false
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
      maximumPoolSize: 100
      minimumIdle: 20
      maxLifetime: 1800000
      idleTimeout: 180000
      connectionTimeout: 200000
  datasourceReadOnly:
    type: com.microsoft.sqlserver.jdbc.SQLServerDataSource
    url: jdbc:sqlserver://10.100.110.78;databaseName=easyposbackoffice;encrypt=true;trustServerCertificate=true;applicationIntent=ReadOnly;
    username: sa
    password: Sds@123
    hikari:
      poolName: Hikari
      auto-commit: false
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
      maximumPoolSize: 100
      minimumIdle: 20
      maxLifetime: 1800000
      idleTimeout: 180000
      connectionTimeout: 200000

  liquibase:
    # Remove 'faker' if you do not want the sample data to be loaded automatically
    contexts: dev
    enabled: false
  mail:
    host: mail.softdreams.vn
    port: 465
    username: easypos-noreply@softdreams.vn
    password: 123456Aa@
    properties:
      mail:
        smtp:
          auth: true
          ssl:
            enable: true
  messages:
    cache-duration: PT1S # 1 second, see the ISO 8601 standard
  thymeleaf:
    cache: false
  servlet:
    multipart:
      max-request-size: 10MB
      max-file-size: 10MB
  rabbitmq:
    host: 10.100.110.78
    virtual-host: /
    username: admin
    password: Sds#2023
    ngogiaphatinvoice:
      ngp-check-invoice-queue: ngp-check-invoice
      ngp-check-invoice-routing-key: ngp-routing-check-invoice
      ngp-import-invoice-queue: ngp-import-invoice
      ngp-import-invoice-routing-key: ngp-routing-import-invoice
      ngp-issue-invoice-queue: ngp-issue-invoice
      ngp-issue-invoice-routing-key: ngp-routing-issue-invoice
      ngp-replace-invoice-queue: ngp-replace-invoice
      ngp-replace-invoice-routing-key: ngp-routing-replace-invoice
      ngp-cancel-invoice-queue: ngp-cancel-invoice
      ngp-cancel-invoice-routing-key: ngp-routing-cancel-invoice
    easyinvoice:
      issue-invoice-queue: issue-invoice
      issue-invoice-routing-key: easypos-issue-invoice
      check-invoice-queue: check-invoice
      check-invoice-routing-key: easypos-check-invoice
      replace-invoice-queue: replace-invoice
      replace-invoice-routing-key: easypos-replace-invoice
      import-invoice-queue: import-invoice
      import-invoice-routing-key: easypos-cancel-invoice
      cancel-invoice-queue: cancel-invoice
      cancel-invoice-routing-key: easypos-cancel-invoice
    easybooks88:
      send-queue: send-eb88-dev
      send-routing-key: easypos-send-eb88-dev
    consumer:
      max-concurrent-consumer: 2
      concurrent-consumer: 2
      prefetch-count: 10
    producer:
      reply-timeout: 60000
      direct-exchange: amq.direct
  main:
    allow-circular-references: true
server:
  port: 8080

# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================

jhipster:
  # CORS is only enabled by default with the "dev" profile
  cors:
    # Allow Ionic for JHipster by default (* no longer allowed in Spring Boot 2.4+)
    allowed-origins: 'http://localhost:8100,https://localhost:8100,http://localhost:9000,https://localhost:9000,http://localhost:4200,https://localhost:4200'
    # Enable CORS when running in GitHub Codespaces
    allowed-origin-patterns: 'https://*.githubpreview.dev'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count,X-${jhipster.clientApp.name}-alert,X-${jhipster.clientApp.name}-error,X-${jhipster.clientApp.name}-params'
    allow-credentials: true
    max-age: 1800
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: NDdiMDQ3Njg3NjNkMjJjYTVhMDQyNDgwNjhhZjFjOGIxZTQ4OGJkMTE1Mzk5YTcxMWVkY2JiMjU2YzQxZWM4ZmJiZDU0MTZjODJkYWE5MGU0ZDAyNDNiNWViZjJkYWIxYmY2OGZhMjQyOWY4ODJjNTZmYzIxN2ViOTY4OThkNTQ=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  mail: # specific JHipster mail property, for standard properties see MailProperties
    base-url: http://127.0.0.1:8080
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
